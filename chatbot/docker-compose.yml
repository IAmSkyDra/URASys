services:
  document-server:
    hostname: document-server
    container_name: document-server
    restart: always
    build:
      context: .
      dockerfile: ./server/document_server/Dockerfile
      tags:
        - "hcmut-chatbot/document-server:latest"
    image: hcmut-chatbot/document-server:latest
    ports:
      - "8001:8000"
    environment:
      TOKENIZERS_PARALLELISM: "false"
      PROMETHEUS_MULTIPROC_DIR: /app/prometheus_multiproc
      ENVIRONMENT_FILE: /app/environments/.env
    volumes:
      - ./.data/logs:/app/logs
      - ./.data/prometheus_multiproc:/app/prometheus_multiproc
      - ./../environments:/app/environments:ro
      - .:/app/chatbot
    command: python -m chatbot.server.document_server.server_app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - chatbot
    
  faq-server:
    hostname: faq-server
    container_name: faq-server
    restart: always
    build:
      context: .
      dockerfile: ./server/faq_server/Dockerfile
      tags:
        - "hcmut-chatbot/faq-server:latest"
    image: hcmut-chatbot/faq-server:latest
    ports:
      - "8002:8000"
    environment:
      TOKENIZERS_PARALLELISM: "false"
      PROMETHEUS_MULTIPROC_DIR: /app/prometheus_multiproc
      ENVIRONMENT_FILE: /app/environments/.env
    volumes:
      - ./.data/logs:/app/logs
      - ./.data/prometheus_multiproc:/app/prometheus_multiproc
      - ./../environments:/app/environments:ro
      - .:/app/chatbot
    command: python -m chatbot.server.faq_server.server_app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - chatbot
      
  index-server:
    hostname: index-server
    container_name: index-server
    restart: always
    build:
      context: .
      dockerfile: ./server/index_server/Dockerfile
      tags:
        - "hcmut-chatbot/index-server:latest"
    image: hcmut-chatbot/index-server:latest
    ports:
      - "8003:8000"
    environment:
      TOKENIZERS_PARALLELISM: "false"
      PROMETHEUS_MULTIPROC_DIR: /app/prometheus_multiproc
      ENVIRONMENT_FILE: /app/environments/.env
    volumes:
      - ./.data/logs:/app/logs
      - ./.data/prometheus_multiproc:/app/prometheus_multiproc
      - ./../environments:/app/environments:ro
      - .:/app/chatbot
    command: uvicorn chatbot.server.index_server.server_app:app --host 0.0.0.0 --port 8000 --loop asyncio --workers 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - chatbot

  chatbot-server:
    hostname: chatbot-server
    container_name: chatbot-server
    restart: always
    build:
      context: .
      dockerfile: ./server/chatbot_server/Dockerfile
      tags:
        - "hcmut-chatbot/chatbot-server:latest"
    image: hcmut-chatbot/chatbot-server:latest
    ports:
      - "8010:8010"
    environment:
      GOOGLE_API_KEY: ${GEMINI_API_KEY}
    command: ["adk", "web", "--port", "8010", "--host", "0.0.0.0", "--reload"]
    depends_on:
      document-server:
        condition: service_healthy
      faq-server:
        condition: service_healthy
    networks:
      - chatbot

networks:
  chatbot:
    name: chatbot
    external: true
